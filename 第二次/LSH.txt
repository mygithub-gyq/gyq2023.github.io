https://blog.csdn.net/weixin_44023658/article/details/107841802


http://www.360doc.com/content/18/0927/15/39821762_790129444.shtml

对原始数据集合中所有的数据都进行 hash 映射后，我们就得到了一个 hash table，这些原始数据集被分散到了hash table的桶内，每个桶会落入一些原始数据，属于同一个桶内的数据就有很大可能是相邻的，当然也存在不相邻的数据被hash到了同一个桶内。因此，如果我们能够找到这样一些 hash functions，使得经过它们的哈希映射变换后，原始空间中相邻的数据落入相同的桶内的话，那么我们在该数据集合中进行近邻查找就变得容易了，我们只需要将查询数据进行哈希映射得到其桶号，然后取出该桶号对应桶内的所有数据，再进行线性匹配即可查找到与查询数据相邻的数据。


为拉大距离近的点与距离远的点经映射后碰撞概率之间的差距，常将 k 个 p-stable LSH 哈希函数联合使用


https://blog.csdn.net/qq_39583450/article/details/109048457


(1)两个随机变量是同分布的吗，怎么判定？

(2)Lp范数的p可以是分数吗？

(3)哈希函数的个数k，哈希表的个数L怎么确定？

(4)怎么搜索？在哪里搜索？搜索多少个？复杂度如何？如何通过数据结构来表示？

基于树的经典实现为kd-tree，通过将空间按维度进行划分，缩小检索范围来加速的方法。适用于空间维度较小的情况。Kd-tree 的方法是：找出数据集中方差最高的维度，利用这个维度的数值将数据划分为两个部分，对每个子集重复相同的过程。

https://blog.csdn.net/qq_40206371/article/details/132678056(ANN,kd树,球树)

